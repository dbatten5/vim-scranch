*scranch.txt*    Git branch based note taking                              v1.0
*Scranch*

==============================================================================
CONTENTS                                                      *ScranchContents*

    1. Intro ........................................ |ScranchIntro|
    2. Commands .................................. |ScranchCommands|
      2.1 |:Scranch|
      2.2 |:ScranchPreview|
    3. Configuration ........................ |ScranchConfiguration|
      3.1 |g:scranch_directory|
      3.2 |g:scranch_win_size|
      3.3 |g:scranch_no_mappings|
      3.4 |g:scranch_disable|
    4. Mappings .................................. |ScranchMappings|

==============================================================================
OVERVIEW                                                         *ScranchIntro*

Scranch provides a way to take notes that specifically relate to a git branch,
without ever having to leave vim. Opening the note window brings up a new note
in a (faux-)scratch window tied to the current git branch. New branch, new
note.

==============================================================================
COMMANDS                                                      *ScranchCommands*

------------------------------------------------------------------------------
2.1 :Scranch[!]                                                      *:Scranch*

Open the scranch window and move into insert mode at the end of the note.
Leaving the window automatically closes and saves the note.

With [!] the scranch window will open in the current active window. Use vim's
built-in <c-^> to flip back to your previous buffer, scranch will
automatically save the note.

------------------------------------------------------------------------------
2.2 :ScranchPreview                                           *:ScranchPreview*

Open the scranch window but keep focus on the current window. Run the same
command again to close the window.

==============================================================================
CONFIGURATION                                            *ScranchConfiguration*

------------------------------------------------------------------------------
3.1 g:scranch_directory = `'~/scranch'`                     *g:scranch_directory*

The root of the scranch note directory. Set this as a path to a valid
directory on your disk.

------------------------------------------------------------------------------
3.2 g:scranch_win_size = `0.2`                             *g:scranch_win_size*

The size of the scranch window as a percentage of the full window height (0.2
= 20%)

------------------------------------------------------------------------------
3.3 g:scranch_no_mappings = `0`                            *g:scranch_no_mappings*

Set to 1 to disable all scranch buffer mappings.

------------------------------------------------------------------------------
3.4 g:scranch_disable = `0`                                    *g:scranch_disable*

Set to 1 to disable the plugin entirely.

==============================================================================
MAPPINGS                                                      *ScranchMappings*

Global ~

Scranch comes with no global mappings out of the box, but feel free to add one
like so: >

    nnoremap gs :Scranch<cr>

Buffer-local (filetype=scranch) ~
    g?             Show this help.
    <Plug>(scranch-toggle-main)
    M              Switch to the main / master note. Use vim's built-in <c-^>
                   to switch back to the note.
    <Plug>(scranch-add-todo)
    T              Add a todo item.
    <Plug>(scranch-toggle-todo-completion)
    -              With your cursor on a todo item, toggle completion of the
                   item.
    <Plug>(scranch-toggle-home)
    gh             Switch to the home note, accessible from any project.
    <Plug>(scranch-keep-alive)
    gk             Keep the scranch window alive after navigation away.

If any of these mappings don't suit your setup, you can override them as
follows: >

    nmap X <Plug>(scranch-toggle-todo-completion)

Note the use of `nmap` rather than `nnoremap` as we **do** want vim to
recursively map.

==============================================================================
vim:tw=78:ts=8:ft=help:norl:
